[
    {
        "prefix": "import React, { useEffect, useRef, useState } from 'react';\nimport './redirect.css';\nimport { useNavigate } from 'react-router-dom';\n// imgs\nimport loadingGif from '../imgs/loading.gif';\nimport loadedGif from '../imgs/loaded.gif';\n//interface-s\n\nfunction Redirect()\n{\n  const navigate = useNavigate(); \n\n\n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const preventFromReturn = localStorage.getItem('preventFromReturn'",
        "middle": ");\n    if (preventFromReturn ",
        "suffix": "== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  //variables\n  const [loaded, setLoaded] = useState(false);\n\n  //functions\n\n    useEffect(() => \n    {\n        // Set a timeout\n        const timer = setTimeout(() => {\n            setLoaded(true); \n            const timer2 = setTimeout(() => {\n                navigate('/background');\n            }, 1800)\n        }, 3000);\n\n        // Cleanup the timer when the component is unmounted\n        return () => clearTimeout(timer);\n    }, []);\n  \n  //layout\n  return (\n      <>\n        {loaded ? (\n            <div className='main'>\n                <img className='biger' src={loadedGif} alt=\"\" />\n            </div>\n        ) : (\n            <div className='main'>\n                <img src={loadingGif} alt=\"\" />\n            </div>\n        )}\n      </>\n  );\n};\n\nexport default Redirect;"
    },
    {
        "prefix": "import React, { useEffect, useRef, useState } from 'react';\nimport './redirect.css';\nimport { useNavigate } from 'react-router-dom';\n// imgs\nimport loadingGif from '../imgs/loading.gif';\nimport loadedGif from '../imgs/loaded.gif';\n//interface-s\n\nfunction Redirect()\n{\n  const navigate = useNavigate(); \n\n\n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const preventFromReturn = localStorage.getItem('preventFromReturn');\n    if (preventFromReturn == 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  //variables\n  const [loaded, setLoaded] = useState(false);\n\n  //functions\n\n    useEffect(() => \n    {\n        // Set a timeout\n        const timer = setTimeout(() => {\n            setLoaded(true); \n            const timer2 = setTimeout(() => {\n                navigate('/background');\n            }, 1800)\n        }, 3000);\n\n     ",
        "middle": "   // Cleanup t",
        "suffix": "he timer when the component is unmounted\n        return () => clearTimeout(timer);\n    }, []);\n  \n  //layout\n  return (\n      <>\n        {loaded ? (\n            <div className='main'>\n                <img className='biger' src={loadedGif} alt=\"\" />\n            </div>\n        ) : (\n            <div className='main'>\n                <img src={loadingGif} alt=\"\" />\n            </div>\n        )}\n      </>\n  );\n};\n\nexport default Redirect;"
    },
    {
        "prefix": "import React, { useEffect, useRef, useState } from 'react';\nimport './redirect.css';\nimport { useNavigate } from 'react-router-dom';\n// imgs\nimport loadingGif from '../imgs/loading.gif';\nimport loadedGif from '../imgs/loaded.gif';\n//interface-s\n\nfunction Redirect()\n{\n  const navigate = useNavigate(); \n\n\n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const preventFromReturn = localStorage.getItem('preventFromReturn');\n    if (preventFromReturn == 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  //variables\n  const [loaded, setLoaded] = useState(false);\n\n  //functions\n\n    useEffect(() => \n    {\n        // Set a timeout\n        const timer = setTimeout(() => {\n            setLoaded(true); \n            const timer2 = setTimeout(() => {\n                navigate('/background');\n            }, 1800)\n        }, 3000);\n\n        // Cleanup the timer when the component is unmounted\n        return () => clearTimeout(timer);\n    }, []);\n  \n  //layout\n  return (\n      <>\n        {loaded ? (\n            <div className='main'>\n                <img className='biger' src={loadedGif} alt=\"\" />\n            </div",
        "middle": ">\n        ) : (\n      ",
        "suffix": "      <div className='main'>\n                <img src={loadingGif} alt=\"\" />\n            </div>\n        )}\n      </>\n  );\n};\n\nexport default Redirect;"
    },
    {
        "prefix": "import React, { useEffect, useRef, useState } from 'react';\nimport './redirect.css';\nimport { useNavigate } from 'react-router-dom';\n// imgs\nimport loadingGif from '../imgs/loading.gif';\nimport loadedGif from '../imgs/loaded.gif';\n//interface-s\n\nfunction Redirect()\n{\n  const navigate = useNavigate(); \n\n\n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  useEffect(() => {\n    const preventFromReturn = localStorage.getItem('preventFromReturn');\n    if (preventFromReturn == 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n  //variables\n  const [loaded, setLoaded] = useState(false);\n\n  //functions\n\n    useEffect(() => \n    {\n        // Set a timeout\n        const timer = setTimeout(() => {\n            setLoaded(true); \n            const timer2 = setTimeout(() => {\n                navigate('/background');\n            }, 1800)\n        }, 3000);\n\n        // Cleanup the timer when the component is unmounted\n        return () => clearTimeout(timer);\n    }, []);\n  \n  //layout\n  return (\n      <>\n        {loaded ? (\n            <div className='main'>\n                <img className='biger' src={loadedGif} alt=\"\" />\n            </div>\n        ) : (\n            <div className='main'>\n    ",
        "middle": "            <img src={loading",
        "suffix": "Gif} alt=\"\" />\n            </div>\n        )}\n      </>\n  );\n};\n\nexport default Redirect;"
    },
    {
        "prefix": ".bckH1\n{\n    color: #eee;\n    padding: 30px 0 50px 0;\n}\n.bckH4\n{\n    color: #eee;\n    padding-top: 30px;\n}\n.selectBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 15px;\n    background-color: #6FBDD9;\n}\n.selectBtn:focus\n{\n    border: 4px solid #C387DB;\n}\n.childpool\n{\n    max-height: 500px;\n    overflow: scroll;\n\n}\n.pointcountsArea\n{\n    max-width: 500px;\n    height: 100px;\n    border: 1px dashed gray;\n    padding: 15px;\n    margin-top: 5px;\n    margin: 0 auto;\n    padding: 0 10px;\n}\ninput[type=\"range\"]\n{\n    width: 100%;\n}\ninput[type=\"number\"] \n{\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 16px;\n    height: 50px;\n}\n\n.changePointsButton\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: ",
        "middle": "20px;\n}\n\n\n#gif\n{\n    posit",
        "suffix": "ion: absolute;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n}\n.addPlayer\n{\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    font-size: 50px;\n}\n.addPlayer:hover\n{\n    border: 1px solid white;\n    border-radius: 50%;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.bckH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 60px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\n.PointsContainer\n{\n    margin: 0 15px;\n}"
    },
    {
        "prefix": ".bckH1\n{\n    color: #eee;\n    padding: 30px 0 50px 0;\n}\n.bckH4\n{\n    color: #eee;\n    padding-top: 30px;\n}\n.selectBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 15px;\n    background-color: #6FBDD9;\n}\n.selectBtn:focus\n{\n    border: 4px solid #C387DB;\n}\n.childpool\n{\n    max-height: 500px;\n    overflow: scroll;\n\n}\n.pointcountsArea\n{\n    max-width: 500px;\n    height: 100px;\n    border: 1px dashed gray;\n    padding: 15px;\n    margin-top: 5px;\n    margin: 0 auto;\n    padding: 0 10px;\n}\ninput[type=\"range\"]\n{\n    width: 100%;\n}\ninput[type=\"number\"] \n{\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 16px;\n    height: 50px;\n}\n\n.changePointsBu",
        "middle": "tton\n{\n    color: #00",
        "suffix": "0;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n\n\n#gif\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n}\n.addPlayer\n{\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    font-size: 50px;\n}\n.addPlayer:hover\n{\n    border: 1px solid white;\n    border-radius: 50%;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.bckH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 60px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\n.PointsContainer\n{\n    margin: 0 15px;\n}"
    },
    {
        "prefix": ".bckH1\n{\n    color: #eee;\n    padding: 30px 0 50px 0;\n}\n.bckH4\n{\n    color: #eee;\n    padding-top: 30px;\n}\n.selectBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 15px;\n    background-color: #6FBDD9;\n}\n.selectBtn:focus\n{\n    border: 4px solid #C387DB;\n}\n.childpool\n{\n    max-height: 500px;\n    overflow: scroll;\n\n}\n.pointcountsArea\n{\n    max-width: 500px;\n    height: 100px;\n    border: 1px dashed gray;\n    padding: 15px;\n    margin-top: 5px;\n    margin: 0 auto;\n    padding: 0 10px;\n}\ninput[type=\"range\"]\n{\n    width: 100%;\n}\ninput[type=\"number\"] \n{\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 16px;",
        "middle": "\n    height: 50px;\n}\n\n",
        "suffix": ".changePointsButton\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n\n\n#gif\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n}\n.addPlayer\n{\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    font-size: 50px;\n}\n.addPlayer:hover\n{\n    border: 1px solid white;\n    border-radius: 50%;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.bckH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 60px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\n.PointsContainer\n{\n    margin: 0 15px;\n}"
    },
    {
        "prefix": ".bckH1\n{\n    color: #eee;\n    padding: 30px 0 50px 0;\n}\n.bckH4\n{\n    color: #eee;\n    padding-top: 30px;\n}\n.selectBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 15px;\n    background-color: #6FBDD9;\n}\n.selectBtn:focus\n{\n    border: 4px solid #C387DB;\n}\n.childpool\n{\n    max-height: 500px;\n    overflow: scroll;\n\n}\n.pointcountsArea\n{\n    max-width: 500px;\n    height: 100px;\n    border: 1px dashed gray;\n    padding: 15px;\n    margin-top: 5px;\n    margin: 0 auto;\n    padding: 0 10px;\n}\ninput[type=\"range\"]\n{\n    width: 100%;\n}\ninput[type=\"number\"] \n{\n    padding: 10px;\n    border: 1px solid #ccc;\n    border-radius: 5px;\n    font-size: 16px;\n    height: 50px;\n}\n\n.changePointsButton\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n\n\n#gif\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n}\n.addPlayer\n{\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    font-size: 50px;\n}\n.addPlayer:hover\n{\n    border: 1px solid white;\n    border-radius: 50%;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.bckH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 60px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\n.PointsContainer\n{\n    margin:",
        "middle": " 0 15px;\n}",
        "suffix": ""
    },
    {
        "prefix": ".bckH1\n{\n    color: #eee;\n    padding: 30px 0 50px 0;\n}\n.bckH4\n{\n    color: #eee;\n    padding-top: 30px;\n}\n\n.selectBtn:focus\n{\n    border: 4px solid #C387DB;\n}\n.childpool\n{\n    max-height: 500px;\n    overflow: scroll;\n\n}\n.pointCountsArea\n{\n    width: 100%;\n}\n\n.changePointsButton\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-rad",
        "middle": "ius: 10px;\n    marg",
        "suffix": "in: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n\n\n#gif\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n}\n.addPlayer\n{\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    font-size: 50px;\n}\n.addPlayer:hover\n{\n    border: 1px solid white;\n    border-radius: 50%;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.bckH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 60px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\n/* .PointsContainer\n{\n    margin: 0 15px;\n} */\n.selectBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 15px;\n    background-color: #6FBDD9;\n}\n.addBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 20px;\n    background-color: #EF81DD;\n\n    width: 180px;\n}\n.addMoreBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 20px;\n    background-color: #F67C7E;\n\n    width: 200px;\n}\n#childrenTableAdmin\n{\n    margin-top: 40px;\n    border-collapse: collapse;\n    width: 50%;\n}\n#childrenTableAdmin td, #childrenTableAdmin th\n{\n    border: 1px solid #ddd;\n    padding: 8px;\n}\n#childrenTableAdmin tr:nth-child(even)\n{\n    background-color: #bbb;\n}\n#childrenTableAdmin tr:nth-child(odd)\n{\n    background-color: #ddd;\n}\n#childrenTableAdmin th\n{\n    padding-top: 12px;\n    padding-bottom: 12px;\n    background-color: #65D692;\n    background-color: #C387DB;\n    color: #222;\n}\n\n@media only screen and (max-width: 1320px)\n{\n    #childrenTableAdmin\n    {\n        width: 70%;\n    }\n\n}\n\n@media only screen and (max-width: 940px)\n{\n    #childrenTableAdmin\n    {\n        width: 90%;\n    }\n    .addBtn\n    {\n        width: 80px;\n    }\n    .addMoreBtn\n    {\n        width: 100px;\n    }\n    .limiter\n    {\n        width: 100px;\n    }\n\n}\n@media only screen and (max-width: 510px)\n{\n    #childrenTableAdmin\n    {\n        width: 90%;\n    }\n    .addBtn\n    {\n        width: 80px;\n        font-size: 15px;\n    }\n    .addMoreBtn\n    {\n        width: 80px;\n        font-size: 15px;\n    }\n    .limiter\n    {\n        width: 80px;\n    }\n\n}"
    },
    {
        "prefix": ".bckH1\n{\n    color: #eee;\n    padding: 30px 0 50px 0;\n}\n.bckH4\n{\n    color: #eee;\n    padding-top: 30px;\n}\n\n.selectBtn:focus\n{\n    border: 4px solid #C387DB;\n}\n.childpool\n{\n    max-height: 500px;\n    overflow: scroll;\n\n}\n.pointCountsArea\n{\n    width: 100%;\n}\n\n.changePointsButton\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n\n\n#gif\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n}\n.addPlayer\n{\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    font-size: 50px;\n}\n.addPlayer:hover\n{\n    border: 1px solid white;\n    border-radius: 50%;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.bckH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 60px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\n/* .PointsContainer\n{\n    margin: 0 15px;\n} */\n.selectBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 15px;\n    background-color: #6FBDD9;\n}\n.addBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 20px;\n    background-color: #EF81DD;\n\n    width: 180px;\n}\n.addMoreBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 20px;\n    background-color: #F67C7E;\n\n  ",
        "middle": "  width: 200px;\n}\n#children",
        "suffix": "TableAdmin\n{\n    margin-top: 40px;\n    border-collapse: collapse;\n    width: 50%;\n}\n#childrenTableAdmin td, #childrenTableAdmin th\n{\n    border: 1px solid #ddd;\n    padding: 8px;\n}\n#childrenTableAdmin tr:nth-child(even)\n{\n    background-color: #bbb;\n}\n#childrenTableAdmin tr:nth-child(odd)\n{\n    background-color: #ddd;\n}\n#childrenTableAdmin th\n{\n    padding-top: 12px;\n    padding-bottom: 12px;\n    background-color: #65D692;\n    background-color: #C387DB;\n    color: #222;\n}\n\n@media only screen and (max-width: 1320px)\n{\n    #childrenTableAdmin\n    {\n        width: 70%;\n    }\n\n}\n\n@media only screen and (max-width: 940px)\n{\n    #childrenTableAdmin\n    {\n        width: 90%;\n    }\n    .addBtn\n    {\n        width: 80px;\n    }\n    .addMoreBtn\n    {\n        width: 100px;\n    }\n    .limiter\n    {\n        width: 100px;\n    }\n\n}\n@media only screen and (max-width: 510px)\n{\n    #childrenTableAdmin\n    {\n        width: 90%;\n    }\n    .addBtn\n    {\n        width: 80px;\n        font-size: 15px;\n    }\n    .addMoreBtn\n    {\n        width: 80px;\n        font-size: 15px;\n    }\n    .limiter\n    {\n        width: 80px;\n    }\n\n}"
    },
    {
        "prefix": ".bckH1\n{\n    color: #eee;\n    padding: 30px 0 50px 0;\n}\n.bckH4\n{\n    color: #eee;\n    padding-top: 30px;\n}\n\n.selectBtn:focus\n{\n    border: 4px solid #C387DB;\n}\n.childpool\n{\n    max-height: 500px;\n    overflow: scroll;\n\n}\n.pointCountsArea\n{\n    width: 100%;\n}\n\n.changePointsButton\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n\n\n#gif\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n}\n.addPlayer\n{\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    font-size: 50px;\n}\n.addPlayer:hover\n{\n    border: 1px solid white;\n    border-radius: 50%;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.bckH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 60px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\n/* .PointsContainer\n{\n    margin: 0 15px;\n} */\n.selectBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 15px;\n    background-color: #6FBDD9;\n}\n.addBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 20px;\n    background-color: #EF81DD;\n\n    width: 180px;\n}\n.addMoreBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 20px;\n    background-color: #F67C7E;\n\n    width: 200px;\n}\n#childrenTableAdmin\n{\n    margin-top: 40px;\n    border-collapse: collapse;\n    width: 50%;\n}\n#childrenTableAdmin td, #childrenTableAdmin th\n{\n    border: 1px solid #ddd;\n    padding: 8px;\n}\n#childrenTableAdmin tr:nth-child(even)\n{\n    background-color: #bbb;\n}\n#childrenTableAdmin tr:nth-child(odd)\n{\n    background-color: #ddd;\n}\n#childrenTableAdmin th\n{\n    padding-top: 12px;\n    padding-bottom: 12px;\n    background-color: #65D692;\n    background-color: #C387DB;\n    color: #222;\n}\n\n@media only screen and (max-width: 1320px)\n{\n    #childrenTableAdmin\n    {\n        width: 70%;\n    }\n\n}\n\n@media only screen and (max-width: 940px)\n{\n    #childrenTableAdmin\n    {\n        width: 90%;\n    }\n    .addBtn\n    {\n        width: 80px;\n    }\n    .addMoreBtn\n    {\n        width: 100px;\n    }\n    .limiter\n    {\n        width: 100px;\n    }\n\n}\n@media only screen and (max-width: 510px)\n{\n    #childrenTableAdmin\n    {\n        width: 90%;\n    }\n    ",
        "middle": ".addBtn\n    {\n       ",
        "suffix": " width: 80px;\n        font-size: 15px;\n    }\n    .addMoreBtn\n    {\n        width: 80px;\n        font-size: 15px;\n    }\n    .limiter\n    {\n        width: 80px;\n    }\n\n}"
    },
    {
        "prefix": ".bckH1\n{\n    color: #eee;\n    padding: 30px 0 50px 0;\n}\n.bckH4\n{\n    color: #eee;\n    padding-top: 30px;\n}\n\n.selectBtn:focus\n{\n    border: 4px solid #C387DB;\n}\n.childpool\n{\n    max-height: 500px;\n    overflow: scroll;\n\n}\n.pointCountsArea\n{\n    width: 100%;\n}\n\n.changePointsButton\n{\n    color: #000;\n    font-size: 20px;\n ",
        "middle": "   border: none;\n    pad",
        "suffix": "ding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n\n\n#gif\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: rgba(0, 0, 0, 0.8);\n}\n.addPlayer\n{\n    width: 100px;\n    height: 100px;\n    position: absolute;\n    top: 0;\n    right: 0;\n    background-color: transparent;\n    border: none;\n    color: white;\n    font-size: 50px;\n}\n.addPlayer:hover\n{\n    border: 1px solid white;\n    border-radius: 50%;\n}\n\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.bckH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 60px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\n/* .PointsContainer\n{\n    margin: 0 15px;\n} */\n.selectBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 15px;\n    background-color: #6FBDD9;\n}\n.addBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 20px;\n    background-color: #EF81DD;\n\n    width: 180px;\n}\n.addMoreBtn\n{\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    font-size: 20px;\n    background-color: #F67C7E;\n\n    width: 200px;\n}\n#childrenTableAdmin\n{\n    margin-top: 40px;\n    border-collapse: collapse;\n    width: 50%;\n}\n#childrenTableAdmin td, #childrenTableAdmin th\n{\n    border: 1px solid #ddd;\n    padding: 8px;\n}\n#childrenTableAdmin tr:nth-child(even)\n{\n    background-color: #bbb;\n}\n#childrenTableAdmin tr:nth-child(odd)\n{\n    background-color: #ddd;\n}\n#childrenTableAdmin th\n{\n    padding-top: 12px;\n    padding-bottom: 12px;\n    background-color: #65D692;\n    background-color: #C387DB;\n    color: #222;\n}\n\n@media only screen and (max-width: 1320px)\n{\n    #childrenTableAdmin\n    {\n        width: 70%;\n    }\n\n}\n\n@media only screen and (max-width: 940px)\n{\n    #childrenTableAdmin\n    {\n        width: 90%;\n    }\n    .addBtn\n    {\n        width: 80px;\n    }\n    .addMoreBtn\n    {\n        width: 100px;\n    }\n    .limiter\n    {\n        width: 100px;\n    }\n\n}\n@media only screen and (max-width: 510px)\n{\n    #childrenTableAdmin\n    {\n        width: 90%;\n    }\n    .addBtn\n    {\n        width: 80px;\n        font-size: 15px;\n    }\n    .addMoreBtn\n    {\n        width: 80px;\n        font-size: 15px;\n    }\n    .limiter\n    {\n        width: 80px;\n    }\n\n}"
    },
    {
        "prefix": "import { useEffect, us",
        "middle": "eState, useRef } from 'react';",
        "suffix": "\nimport './background.css';\nimport { database } from '../config/firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\n\nimport AddPlayer from '../components/addPlayer';\n\n//imgs\nimport loadedGif from '../imgs/loaded.gif';\nimport childrenBackground from '../imgs/childrenBackground.jpg';\n\n\nfunction Background() \n{\n  // Variables\n  localStorage.setItem('preventFromReturn', 'true');\n  const [childrenList, setChildrenList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [operation, setOperation] = useState('add');\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showGif, setShowGif] = useState(false);\n\n  const [selectedChild, setSelectedChild] = useState(null);\n  const [pointsCount, setPointsCount] = useState(0);\n\n  const navigate = useNavigate();\n  // Functions\n  \n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => {\n      const childrenData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      const sortedData = childrenData.sort((a, b) => \n        a.name.localeCompare(b.name)\n      );\n      setChildrenList(sortedData);\n    });\n  \n    return () => unsubscribe(); // Cleanup listener on component unmount\n  }, []);\n  \n\n  const selectBtnClick = (child) =>\n  {\n    setSelectedChild(child);\n  }\n\n  \n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const addPoint = async (child) => {\n    if (child && child.id) {\n      try {\n        const childDocRef = doc(database, \"score\", child.id);\n        const currentPoints = child.points;\n        const newPoints = currentPoints + 1;\n  \n        await updateDoc(childDocRef, { points: newPoints });\n  \n        setShowGif(true);\n        setTimeout(() => {\n          setShowGif(false);\n        }, 1800);\n  \n        setError(\"\");\n        setPointsCount(0);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n  };\n  \n  const addPoints = async (child) => {\n    if (child && child.id) {\n      try {\n        const childDocRef = doc(database, \"score\", child.id);\n        const currentPoints = child.points;\n        const newPoints = currentPoints + 2;\n  \n        await updateDoc(childDocRef, { points: newPoints });\n  \n        setShowGif(true);\n        setTimeout(() => {\n          setShowGif(false);\n        }, 1800);\n  \n        setError(\"\");\n        setPointsCount(0);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n  };\n  \n  \n\n  \n\n  // Layout\n  return (\n    <>\n\n    <button className='addPlayer' onClick={toggleModal}>+</button>\n\n    <AddPlayer \n        showModal={showModal} \n        toggleModal={toggleModal} \n    />\n      \n    \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='bckH1'>Stanovište</h1>\n      </div>\n    \n      <div className='PointsContainer'>\n          \n\n\n      </div>\n\n\n      <h4 className='bckH4'>vyberte dieťa:</h4>\n\n      <div className='consoleTable'>\n        <table id='childrenTableAdmin'>\n          <thead>\n            <tr>\n              <th>Meno hráča</th>\n              <th>Pridať</th>\n              <th>Počet bodov</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              childrenList.map((children) => (\n                <tr key={children.id}>\n                  <td className='limiter'>{children.name}</td>\n                  <td>\n                    <button \n                      className='addBtn' \n                      onClick={() => addPoint(children)}\n                    >\n                      +1\n                    </button>\n                    <button \n                      className='addMoreBtn' \n                      onClick={() => addPoints(children)}\n                    >\n                      +2\n                    </button>\n                  </td>\n                  <td>{children.points}</td>\n                </tr>                \n              ))\n            }\n          </tbody>\n        </table>\n        \n      </div>\n\n\n      {/* <div className='childpool'>\n          {\n              childrenList.map((children) => (\n                  <button key={children.id} className='selectBtn' onClick={() => selectBtnClick(children)}>{children.name} : {children.points}</button>\n              ))\n          }\n      </div> */}\n\n\n      {/* <button \n          className='changePointsButton' \n          type='submit'\n          onClick={handleSubmit}\n      >\n          Zmeniť!\n      </button> */}\n\n      {error && <p className='error'>{error}</p>}\n    </>\n  );\n}\n\nexport default Background;"
    },
    {
        "prefix": "import { useEffect, useState, useRef } from 'react';\nimport './background.css';\nimport { database } from '../config/firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\n\nimport AddPlayer from '../components/addPlayer';\n\n//imgs\nimport loadedGif from '../imgs/loaded.gif';\nimport childrenBackground from '../imgs/childrenBackground.jpg';\n\n\nfunction Background() \n{\n  // Variables\n  localStorage.setItem('preventFromReturn', 'true');\n  const [childrenList, setChildrenList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [operation, setOperation] = useState('add');\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showGif, setShowGif] = useState(false);\n\n  const [selectedChild, setSelectedChild] = useState(null);\n  const [pointsCount, setPointsCount] = useState(0);\n\n  const navigate = useNavigate();\n  // Functions\n  \n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => {\n      const childrenData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      const sortedData = childrenData.sort((a, b) => \n        a.name.localeCompare(b.name)\n      );\n      setChildrenList(sortedData);\n    });\n  \n    return () => unsubscribe(); // Cleanup listener on component unmount\n  }, []);\n  \n\n  const selectBtnClick = (child) =>\n  {\n    setSelectedChild(child);\n  }\n\n  \n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const addPoint = async (child) => {\n    if (child && child.id) {\n      try {\n        const childDocRef = doc(database, \"score\", child.id);\n        const currentPoints = child.points;\n        const newPoints = currentPoints + 1;\n  \n        await updateDoc(childDocRef, { points: newPoints });\n  \n        setShowGif(true);\n        setTimeout(() => {\n          setShowGif(false);\n        }, 1800);\n  \n        setError(\"\");\n        setPointsCount(0);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n  };\n  \n  const addPoints = async (child) => {\n    if (child && child.id) {\n      try {\n        const childDocRef = doc(database, \"score\", child.id);\n        const currentPoints = child.points;\n        const newPoints = currentPoints + 2;\n  \n        await updateDoc(childDocRef, { points: newPoints });\n  \n        setShowGif(true);\n        setTimeout(() => {\n          setShowGif(false);\n        }, 1800);\n  \n        setError(\"\");\n        setPointsCount(0);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n  };\n  \n  \n\n  \n\n  // Layout\n  return (\n    <>\n\n    <button className='addPlayer' onClick={toggleModal}>+</button>\n\n    <AddPlayer \n        showModal={showModal} \n        toggleModal={toggleModal} \n    />\n      \n    \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='bckH1'>Stanovište</h1>\n      </div>\n    \n      <div className='PointsContainer'>\n          \n\n\n      </div>\n\n\n      <h4 className='bckH4'>vyberte dieťa:</h4>\n\n      <div className='consoleTable'>\n        <table id='childrenTableAdmin'>\n          <thead>\n            <tr>\n              <th>Meno hráča</th>\n              <th>Pridať</th>\n              <th>Počet bodov</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              childrenList.map((children) => (\n                <tr key={children.id}>\n                  <td className='limiter'>{children.name}</td>\n                  <td>\n                    <button \n                      className='addBtn' \n                      onClick={() => addPoint(children)}\n                    >\n                      +1\n                    </button>\n                    <button \n                      className='addMoreBtn' \n                      onClick={() => addPoints(children)}\n                    >\n                      +2\n                    </button>\n                  </t",
        "middle": "d>\n               ",
        "suffix": "   <td>{children.points}</td>\n                </tr>                \n              ))\n            }\n          </tbody>\n        </table>\n        \n      </div>\n\n\n      {/* <div className='childpool'>\n          {\n              childrenList.map((children) => (\n                  <button key={children.id} className='selectBtn' onClick={() => selectBtnClick(children)}>{children.name} : {children.points}</button>\n              ))\n          }\n      </div> */}\n\n\n      {/* <button \n          className='changePointsButton' \n          type='submit'\n          onClick={handleSubmit}\n      >\n          Zmeniť!\n      </button> */}\n\n      {error && <p className='error'>{error}</p>}\n    </>\n  );\n}\n\nexport default Background;"
    },
    {
        "prefix": "import { useEffect, useState, useRef } from 'react';\nimport './background.css';\nimport { database } from '../config/firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\n\nimport AddPlayer from '../components/addPlayer';\n\n//imgs\nimport loadedGif from '../imgs/loaded.gif';\nimport childrenBackground from '../imgs/childrenBackground.jpg';\n\n\nfunction Background() \n{\n  // Variables\n  localStorage.setItem('preventFromReturn', 'true');\n  const [childrenList, setChildrenList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [operation, setOperation] = useState('add');\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showGif, setShowGif] = useState(false);\n\n  const [selectedChild, setSelectedChild] = useState(null);\n  const [pointsCount, setPointsCount] = useState(0);\n\n  const navigate = useNavigate();\n  // Functions\n  \n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => {\n      const childrenData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      const sortedData = childrenData.sort((a, b) => \n        a.name.localeCompare(b.name)\n      );\n      setChildrenList(sortedData);\n    });\n  \n    return () => unsubscribe(); // Cleanup listener on component unmount\n  }, []);\n  \n\n  const selectBtnClick = (child) =>\n  {\n    setSelectedChild(child);\n  }\n\n  \n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const addPoint = async (child) => {\n    if (child && child.id) {\n      try {\n        const childDocRef = doc(database, \"score\", child.id);\n        const currentPoints = child.points;\n        const newPoints = currentPoints + 1;\n  \n        await updateDoc(childDocRef, { points: newPoints });\n  \n        setShowGif(true);\n        setTimeout(() => {\n          setShowGif(false);\n        }, 1800);\n  \n        setError(\"\");\n        setPointsCount(0);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n  };\n  \n  const addPoints = async (child) => {\n    if (child && child.id) {\n      try {\n        const childDocRef = doc(database, \"score\", child.id);\n        const currentPoints = child.points;\n        const newPoints = currentPoints + 2;\n  \n        await updateDoc(childDocRef, { points: newPoints });\n  \n        setShowGif(true);\n        setTimeout(() => {\n          setShowGif(false);\n        }, 1800);\n  \n        setError(\"\");\n        setPointsCount(0);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n  };\n  \n  \n\n  \n\n  // Layout\n  return (\n    <>\n\n    <button className='addPlayer' onClick={toggleModal}>+</button>\n\n    <AddPlayer \n        showModal={showModal} \n        toggleModal={toggleModal} \n    />\n      \n    \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className",
        "middle": "='bckH1'>Stanovište</h1>\n ",
        "suffix": "     </div>\n    \n      <div className='PointsContainer'>\n          \n\n\n      </div>\n\n\n      <h4 className='bckH4'>vyberte dieťa:</h4>\n\n      <div className='consoleTable'>\n        <table id='childrenTableAdmin'>\n          <thead>\n            <tr>\n              <th>Meno hráča</th>\n              <th>Pridať</th>\n              <th>Počet bodov</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              childrenList.map((children) => (\n                <tr key={children.id}>\n                  <td className='limiter'>{children.name}</td>\n                  <td>\n                    <button \n                      className='addBtn' \n                      onClick={() => addPoint(children)}\n                    >\n                      +1\n                    </button>\n                    <button \n                      className='addMoreBtn' \n                      onClick={() => addPoints(children)}\n                    >\n                      +2\n                    </button>\n                  </td>\n                  <td>{children.points}</td>\n                </tr>                \n              ))\n            }\n          </tbody>\n        </table>\n        \n      </div>\n\n\n      {/* <div className='childpool'>\n          {\n              childrenList.map((children) => (\n                  <button key={children.id} className='selectBtn' onClick={() => selectBtnClick(children)}>{children.name} : {children.points}</button>\n              ))\n          }\n      </div> */}\n\n\n      {/* <button \n          className='changePointsButton' \n          type='submit'\n          onClick={handleSubmit}\n      >\n          Zmeniť!\n      </button> */}\n\n      {error && <p className='error'>{error}</p>}\n    </>\n  );\n}\n\nexport default Background;"
    },
    {
        "prefix": "import { useEffect, useState, useRef } from 'react';\nimport './background.css';\nimport { database } from '../config/firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\n\nimport AddPlayer from '../components/addPlayer';\n\n//imgs\nimport loadedGif from '../imgs/loaded.gif';\nimport childrenBackground from '../imgs/childrenBackground.jpg';\n\n\nfunction Background() \n{\n  // Variables\n  localStorage.setItem('preventFromReturn', 'true');\n  const [childrenList, setChildrenList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [operation, setOperation] = useState('add');\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showGif, setShowGif] = useState(false);\n\n  const [select",
        "middle": "edChild, setSele",
        "suffix": "ctedChild] = useState(null);\n  const [pointsCount, setPointsCount] = useState(0);\n\n  const navigate = useNavigate();\n  // Functions\n  \n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n\n  useEffect(() => {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => {\n      const childrenData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      const sortedData = childrenData.sort((a, b) => \n        a.name.localeCompare(b.name)\n      );\n      setChildrenList(sortedData);\n    });\n  \n    return () => unsubscribe(); // Cleanup listener on component unmount\n  }, []);\n  \n\n  const selectBtnClick = (child) =>\n  {\n    setSelectedChild(child);\n  }\n\n  \n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  const addPoint = async (child) => {\n    if (child && child.id) {\n      try {\n        const childDocRef = doc(database, \"score\", child.id);\n        const currentPoints = child.points;\n        const newPoints = currentPoints + 1;\n  \n        await updateDoc(childDocRef, { points: newPoints });\n  \n        setShowGif(true);\n        setTimeout(() => {\n          setShowGif(false);\n        }, 1800);\n  \n        setError(\"\");\n        setPointsCount(0);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n  };\n  \n  const addPoints = async (child) => {\n    if (child && child.id) {\n      try {\n        const childDocRef = doc(database, \"score\", child.id);\n        const currentPoints = child.points;\n        const newPoints = currentPoints + 2;\n  \n        await updateDoc(childDocRef, { points: newPoints });\n  \n        setShowGif(true);\n        setTimeout(() => {\n          setShowGif(false);\n        }, 1800);\n  \n        setError(\"\");\n        setPointsCount(0);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n  };\n  \n  \n\n  \n\n  // Layout\n  return (\n    <>\n\n    <button className='addPlayer' onClick={toggleModal}>+</button>\n\n    <AddPlayer \n        showModal={showModal} \n        toggleModal={toggleModal} \n    />\n      \n    \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='bckH1'>Stanovište</h1>\n      </div>\n    \n      <div className='PointsContainer'>\n          \n\n\n      </div>\n\n\n      <h4 className='bckH4'>vyberte dieťa:</h4>\n\n      <div className='consoleTable'>\n        <table id='childrenTableAdmin'>\n          <thead>\n            <tr>\n              <th>Meno hráča</th>\n              <th>Pridať</th>\n              <th>Počet bodov</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              childrenList.map((children) => (\n                <tr key={children.id}>\n                  <td className='limiter'>{children.name}</td>\n                  <td>\n                    <button \n                      className='addBtn' \n                      onClick={() => addPoint(children)}\n                    >\n                      +1\n                    </button>\n                    <button \n                      className='addMoreBtn' \n                      onClick={() => addPoints(children)}\n                    >\n                      +2\n                    </button>\n                  </td>\n                  <td>{children.points}</td>\n                </tr>                \n              ))\n            }\n          </tbody>\n        </table>\n        \n      </div>\n\n\n      {/* <div className='childpool'>\n          {\n              childrenList.map((children) => (\n                  <button key={children.id} className='selectBtn' onClick={() => selectBtnClick(children)}>{children.name} : {children.points}</button>\n              ))\n          }\n      </div> */}\n\n\n      {/* <button \n          className='changePointsButton' \n          type='submit'\n          onClick={handleSubmit}\n      >\n          Zmeniť!\n      </button> */}\n\n      {error && <p className='error'>{error}</p>}\n    </>\n  );\n}\n\nexport default Background;"
    },
    {
        "prefix": "*\n{\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    padding: 0;\n    margin: 0;\n}\n.title\n{\n    color: #ddd;\n    padding: 50px 0;\n    height: 120px;\n}\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.titleH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 90px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\nbody\n{\n    text-align: center;\n    background-color: #333;\n}\n.consoleTable\n",
        "middle": "{\n    display: flex;\n",
        "suffix": "    justify-content: center;\n}\n#childrenTable\n{\n    margin-top: 40px;\n    border-collapse: collapse;\n    width: 80%;\n}\n#childrenTable td, #childrenTable th\n{\n    border: 1px solid #ddd;\n    padding: 8px;\n}\n#childrenTable tr:nth-child(even)\n{\n    background-color: #bbb;\n}\n#childrenTable tr:nth-child(odd)\n{\n    background-color: #ddd;\n}\n#childrenTable th\n{\n    padding-top: 12px;\n    padding-bottom: 12px;\n    background-color: #65D692;\n    background-color: #C387DB;\n    color: #222;\n}\n\n@media only screen and (max-width: 900px)\n{\n    .titleH1\n    {\n        font-size: 50px;\n    }\n\n}"
    },
    {
        "prefix": "*\n{\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    padding: 0",
        "middle": ";\n    margin: 0;\n}\n.title\n{\n  ",
        "suffix": "  color: #ddd;\n    padding: 50px 0;\n    height: 120px;\n}\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.titleH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 90px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\nbody\n{\n    text-align: center;\n    background-color: #333;\n}\n.consoleTable\n{\n    display: flex;\n    justify-content: center;\n}\n#childrenTable\n{\n    margin-top: 40px;\n    border-collapse: collapse;\n    width: 80%;\n}\n#childrenTable td, #childrenTable th\n{\n    border: 1px solid #ddd;\n    padding: 8px;\n}\n#childrenTable tr:nth-child(even)\n{\n    background-color: #bbb;\n}\n#childrenTable tr:nth-child(odd)\n{\n    background-color: #ddd;\n}\n#childrenTable th\n{\n    padding-top: 12px;\n    padding-bottom: 12px;\n    background-color: #65D692;\n    background-color: #C387DB;\n    color: #222;\n}\n\n@media only screen and (max-width: 900px)\n{\n    .titleH1\n    {\n        font-size: 50px;\n    }\n\n}"
    },
    {
        "prefix": "*\n{\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open",
        "middle": " Sans', 'Helvetica Ne",
        "suffix": "ue', sans-serif;\n    padding: 0;\n    margin: 0;\n}\n.title\n{\n    color: #ddd;\n    padding: 50px 0;\n    height: 120px;\n}\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.titleH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 90px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\nbody\n{\n    text-align: center;\n    background-color: #333;\n}\n.consoleTable\n{\n    display: flex;\n    justify-content: center;\n}\n#childrenTable\n{\n    margin-top: 40px;\n    border-collapse: collapse;\n    width: 80%;\n}\n#childrenTable td, #childrenTable th\n{\n    border: 1px solid #ddd;\n    padding: 8px;\n}\n#childrenTable tr:nth-child(even)\n{\n    background-color: #bbb;\n}\n#childrenTable tr:nth-child(odd)\n{\n    background-color: #ddd;\n}\n#childrenTable th\n{\n    padding-top: 12px;\n    padding-bottom: 12px;\n    background-color: #65D692;\n    background-color: #C387DB;\n    color: #222;\n}\n\n@media only screen and (max-width: 900px)\n{\n    .titleH1\n    {\n        font-size: 50px;\n    }\n\n}"
    },
    {
        "prefix": "*\n{\n    font-family: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    padding: 0;\n    margin: 0;\n}\n.title\n{\n    color: #ddd;\n    padding: 50px 0;\n    height: 120px;\n}\n@import url('https://fonts.googleapis.com/css2?family=Caveat:wght@400..700&display=swap');\n.titleH1\n{\n    color: #222;\n    margin-top: 10px;\n    font-size: 90px;\n    font-weight: 100;\n    font-family: \"Caveat\", cursive;\n}\nbody\n{\n    text-align: center;\n    background-color: #333;\n}\n.consoleTable\n{\n    display: flex;\n    justify-content: center;\n}\n#childrenTable\n{\n    margin-top: 40px;\n    border-collapse: collapse;\n    width: 80%;\n}\n#childrenTable td, #childrenTable th\n{\n  ",
        "middle": "  border: 1px solid ",
        "suffix": "#ddd;\n    padding: 8px;\n}\n#childrenTable tr:nth-child(even)\n{\n    background-color: #bbb;\n}\n#childrenTable tr:nth-child(odd)\n{\n    background-color: #ddd;\n}\n#childrenTable th\n{\n    padding-top: 12px;\n    padding-bottom: 12px;\n    background-color: #65D692;\n    background-color: #C387DB;\n    color: #222;\n}\n\n@media only screen and (max-width: 900px)\n{\n    .titleH1\n    {\n        font-size: 50px;\n    }\n\n}"
    },
    {
        "prefix": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Admin from './pages/admin';\nimport Background from './pages/background';\nimport Redirect from './pages/redirect';\nimport Shop from './pages/shop';\nimport { createBrowserRouter, RouterProvider, Route } from 'react-router-dom';\n\nconst router = createBrowserRouter([\n\n ",
        "middle": " {\n    path: \"/\",\n    elem",
        "suffix": "ent: <App/>,\n  },\n  {\n    path: \"/admin\",\n    element: <Admin/>\n  },\n  {\n    path: \"/background\",\n    element: <Background/>\n  },\n  {\n    path: \"/redirect\",\n    element: <Redirect/>\n  },\n  {\n    path: \"/shop\",\n    element: <Shop/>\n  },\n  {\n    path: \"*\",\n    redirect: '/App',\n    element: <App/>\n  }\n\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <RouterProvider router={router}/>\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
    },
    {
        "prefix": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Admin from './pages/admin';\nimport Background from './pages/background';\nimport Redirect from './pages/redirect';\nimport Shop from './pages/shop';\nimport { createBrowserRouter, RouterProvider, Route } from 'react-router-dom';\n\nconst router = createBrowserRouter([\n\n  {\n    path: \"/\",\n    element: <App/>,\n  },\n  {\n    path: \"/admin\",\n    element: <Admin/>\n  },\n  {\n    path: \"/background\",\n    element: <Background/>\n  },\n  {\n    path: \"/redirect\",\n    element: <Redirect/>\n  },\n  {\n    path: \"/shop\",\n    element: <Shop/>\n  },\n  {\n    path: \"*\",\n    redirect: '/App',\n    element",
        "middle": ": <App/>\n  }\n\n]);\n\nconst root ",
        "suffix": "= ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <RouterProvider router={router}/>\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
    },
    {
        "prefix": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Admin from './pages/admin';\nimport Background from './pages/background';\nimport Redirect from './pages/redirect';\nimport Shop from './pages/shop';\nimport { createBrowserRouter, RouterProvider, Route } from 'react-router-dom';\n\nconst router = createBrowserRouter([\n\n  {\n    path: \"/\",\n    element: <App/>,\n  },\n  {\n    path: \"/admin\",\n    element: <Admin/>\n  },\n  {\n    path: \"/background\",\n    element: <Background/>\n  },\n  {\n    path: \"/redirect\",\n    element: <Redirect/>\n  },\n  {\n    path: \"/shop\",\n ",
        "middle": "   element: <Shop/>\n  },\n ",
        "suffix": " {\n    path: \"*\",\n    redirect: '/App',\n    element: <App/>\n  }\n\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <RouterProvider router={router}/>\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
    },
    {
        "prefix": "import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport Admin from './pages/admin';\nimport Background from ",
        "middle": "'./pages/background'",
        "suffix": ";\nimport Redirect from './pages/redirect';\nimport Shop from './pages/shop';\nimport { createBrowserRouter, RouterProvider, Route } from 'react-router-dom';\n\nconst router = createBrowserRouter([\n\n  {\n    path: \"/\",\n    element: <App/>,\n  },\n  {\n    path: \"/admin\",\n    element: <Admin/>\n  },\n  {\n    path: \"/background\",\n    element: <Background/>\n  },\n  {\n    path: \"/redirect\",\n    element: <Redirect/>\n  },\n  {\n    path: \"/shop\",\n    element: <Shop/>\n  },\n  {\n    path: \"*\",\n    redirect: '/App',\n    element: <App/>\n  }\n\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  // <React.StrictMode>\n  //   <App />\n  // </React.StrictMode>\n  <RouterProvider router={router}/>\n);\n\n// const root = ReactDOM.createRoot(document.getElementById('root'));\n// root.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"
    },
    {
        "prefix": ".main\n{\n    width: 100%;\n    height: 80vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n",
        "middle": "img\n{\n    width:",
        "suffix": " 100px;\n    height: auto;\n}\n.biger\n{\n    width: 120px;\n    height: auto;\n}"
    },
    {
        "prefix": ".main\n{\n    width: 100%;\n    height: 80vh;\n    display: flex;\n    align-items: center;\n    ",
        "middle": "justify-content: center;\n}\ni",
        "suffix": "mg\n{\n    width: 100px;\n    height: auto;\n}\n.biger\n{\n    width: 120px;\n    height: auto;\n}"
    },
    {
        "prefix": ".main\n{\n    width: 100%;\n    height: 80vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\nimg\n{\n    width: 100px;\n    height: auto;\n}\n.biger\n{\n    width: 120px;\n ",
        "middle": "   height: auto;\n}",
        "suffix": ""
    },
    {
        "prefix": ".main\n{\n    width: 100%;\n    height: 80vh;\n    display: flex;\n ",
        "middle": "   align-items:",
        "suffix": " center;\n    justify-content: center;\n}\nimg\n{\n    width: 100px;\n    height: auto;\n}\n.biger\n{\n    width: 120px;\n    height: auto;\n}"
    },
    {
        "prefix": ".modal\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.addH2\n{\n    color: white;\n    margin-bottom: 20px;\n}\n.addInput\n{\n    width: 300px;\n    height: 30px;\n    text-align: center;\n}\n.addbtn\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n.addbtn2\n{\n    color: #000;\n    font-size: 20px;\n    borde",
        "middle": "r: none;\n    padding: 20px",
        "suffix": ";\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #F57C7E;\n}\n.modal-content\n{\n    padding: 20px 50px;\n    border-radius: 20px;\n    background-color: black;\n    border: 1px solid blue;\n}"
    },
    {
        "prefix": ".modal\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.addH2\n{\n    color: white;\n    margin-bottom: 20px;\n}\n.addInput\n{\n    width: 300px;\n    height: 30px;\n    text-align: center;\n}\n.addbtn\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-r",
        "middle": "adius: 10px;\n   ",
        "suffix": " margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n.addbtn2\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #F57C7E;\n}\n.modal-content\n{\n    padding: 20px 50px;\n    border-radius: 20px;\n    background-color: black;\n    border: 1px solid blue;\n}"
    },
    {
        "prefix": ".modal\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.addH2\n{\n    color: white;\n    margin-bottom: 20px;\n}\n.addInput\n{\n    width: 300px;\n    height: 30px;\n    text-align: center;\n}\n.addbtn\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n.addbtn2\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4",
        "middle": "px;\n    background",
        "suffix": "-color: #F57C7E;\n}\n.modal-content\n{\n    padding: 20px 50px;\n    border-radius: 20px;\n    background-color: black;\n    border: 1px solid blue;\n}"
    },
    {
        "prefix": ".modal\n{\n    position: absolute;\n    width: 100%;\n    height: 100vh;\n    background-color: rgba(0, 0, 0, 0.7);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n.addH2\n{\n    color: white;\n    margin-bottom: 20px;\n}\n.addInput\n{\n    width: 300px;\n    height: 30px;\n    text-align: center;\n}\n.addbtn\n{\n    color: #000;\n    font-size: 20px",
        "middle": ";\n    border: none;\n    ",
        "suffix": "padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #65D692;\n    margin-top: 20px;\n}\n.addbtn2\n{\n    color: #000;\n    font-size: 20px;\n    border: none;\n    padding: 20px;\n    border-radius: 10px;\n    margin: 4px;\n    background-color: #F57C7E;\n}\n.modal-content\n{\n    padding: 20px 50px;\n    border-radius: 20px;\n    background-color: black;\n    border: 1px solid blue;\n}"
    },
    {
        "prefix": "import { useEffect, useState, useRef } from 'react';\nimport './shop.css';\nimport { database } from '../config/firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\n\nimport AddPlayer from '../components/addPlayer';\n\n//imgs\nimport loadedGif from '../imgs/loaded.gif';\nimport childrenBackground from '../imgs/childrenBackground.jpg';\n\n\nfunction Background() \n{\n  // Variables\n  localStorage.setItem('preventFromReturn', 'true');\n  const [childrenList, setChildrenList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [operation, setOperation] = useState('add');\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showGif, setShowGif] = useState(false);\n\n  const [selectedChild, setSelectedChild] = useState(null);\n  const [pointsCount, setPointsCount] = useState(0);\n\n  const navigate = useNavigate();\n  // Functions\n  \n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n\nuseEffect(() => {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => {\n      const childrenData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      const sortedData = childrenData.sort((a, b) => b.points - a.points);\n      setChildrenList(sortedData);\n    });\n\n    return () => unsubscribe(); // Cleanup listener on component unmount\n  }, []);\n\n  const selectBtnClick = (child) =>\n  {\n    setSelectedChild(child);\n  }\n\n  const handleSubmit = async () => {\n    if (selectedChild && selectedChild.id) {\n      try {\n        const childDocRef = doc(database, \"score\", selectedChild.id);\n        const currentPoints = selectedChild",
        "middle": ".points;\n\n        // Calculate",
        "suffix": " new points based on operation\n        const newPoints = currentPoints - pointsCount;\n\n        if(newPoints < 0)\n        {\n          setError(\"Nedostatok bodov - nemožno dokončiť operáciu\")\n          return;\n        }\n\n        await updateDoc(childDocRef, {\n          points: newPoints\n        });\n\n\n        // alert('Points updated successfully!');\n        setShowGif(true);\n        setTimeout(() => {\n            setShowGif(false);\n        }, 1800);\n        setSelectedChild(null);\n        setError(\"\");\n        setPointsCount(0);\n\n\n        // Optional: Refresh the list\n        const updatedList = childrenList.map(child =>\n          child.id === selectedChild.id ? { ...child, points: newPoints } : child\n        );\n        setChildrenList(updatedList);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  \n\n  // Layout\n  return (\n    <>\n    {showGif && \n        <div id='gif'>\n            <img id='giff' src={loadedGif}/>\n        </div>\n    }\n\n    <button className='addPlayer' onClick={toggleModal}>+</button>\n\n    <AddPlayer \n        showModal={showModal} \n        toggleModal={toggleModal} \n    />\n      \n    \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='bckH1'>Obchod</h1>\n      </div>\n    \n      <div className='PointsContainer'>\n        \n\n        <h4 className='bckH4'>vyberte cenu v ochode:</h4>\n        <div className='pointcountsArea'>\n            <input type=\"range\" min=\"0\" max=\"80\" value={pointsCount} onChange={(e) => setPointsCount(parseInt(e.target.value, 10))}/>\n            <input type=\"number\" min=\"0\" max=\"80\" value={pointsCount} onChange={(e) => setPointsCount(parseInt(e.target.value, 10))}/>\n        </div>\n\n\n      </div>\n        <h4 className='bckH4'>vyberte dieťa:</h4>\n        <div className='childpool'>\n            {\n                childrenList.map((children) => (\n                    <button key={children.id} className='selectBtn' onClick={() => selectBtnClick(children)}>{children.name} : {children.points}</button>\n                ))\n            }\n        </div>\n        <button \n            className='changePointsButton' \n            type='submit'\n            onClick={handleSubmit}\n        >\n            Zmeniť!\n        </button>\n        {error && <p className='error'>{error}</p>}\n    </>\n  );\n}\n\nexport default Background;"
    },
    {
        "prefix": "import { useEffect, useState, useRef } from 'react';\nimport './shop.css';\nimport { database } from '../config/firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\n\nimport AddPlayer from '../components/addPlayer';\n\n//imgs\nimport loadedGif from '../imgs/loaded.gif';\nimport childrenBackground from '../imgs/childrenBackground.jpg';\n\n\nfunction Background() \n{\n  // Variables\n  localStorage.setItem('preventFromReturn', 'true');\n  const [childrenList, setChildrenList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [operation, setOperation] = useState('add');\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showGif, setShowGif] = useState(false);\n\n  const [selectedChild, setSelectedChild] = useState(null);\n  const [pointsCount, setPointsCount] = useState(0);\n\n  const navigate = useNavigate();\n  // Functions\n  \n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n\nuseEffect(() => {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => {\n      const childrenData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      const sortedData = childrenData.sort((a, b) => b.points - a.points);\n      setChildrenList(sortedData);\n    });\n\n    return () => unsubscribe(); // Cleanup listener on component unmount\n  }, []);\n\n  const selectBtnClick = (child) =>\n  {\n    setSelectedChild(child);\n  }\n\n  const handleSubmit = async () => {\n    if (selectedChild && selectedChild.id) {\n      try {\n        const childDocRef = doc(database, \"score\", selectedChild.id);\n        const currentPoints = selectedChild.points;\n\n        // Calculate new points based on operation\n        const newPoints = currentPoints - pointsCount;\n\n        if(newPoints < 0)\n        {\n          setError(\"Nedostatok bodov - nemožno dokončiť operáciu\")\n          return;\n        }\n\n        await updateDoc(childDocRef, {\n          points: newPoints\n        });\n\n\n        // alert('Points updated successfully!');\n        setShowGif(true);\n        setTimeout(() => {\n            setShowGif(false);\n        }, 1800);\n        setSelectedChild(null);\n        setError(\"\");\n        setPointsCount(0);\n\n\n        // Optional: Refresh the list\n        const updatedList = childrenList.map(child =>\n          child.id === selectedChild.id ? { ...child, points: newPoints } : child\n        );\n        setChildrenList(updatedList);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  \n\n  // Layout\n  return (\n    <>\n    {showGif && \n        <div id='gif'>\n            <img id='giff' src={loadedGif}/>\n        </div>\n    }\n\n    <button className='addPlayer' onClick={toggleModal}>+</button>\n\n    <AddPlayer \n        showModal={showModal} \n        toggleModal={toggleModal} \n    />\n      \n    \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='b",
        "middle": "ckH1'>Obchod</h1>\n ",
        "suffix": "     </div>\n    \n      <div className='PointsContainer'>\n        \n\n        <h4 className='bckH4'>vyberte cenu v ochode:</h4>\n        <div className='pointcountsArea'>\n            <input type=\"range\" min=\"0\" max=\"80\" value={pointsCount} onChange={(e) => setPointsCount(parseInt(e.target.value, 10))}/>\n            <input type=\"number\" min=\"0\" max=\"80\" value={pointsCount} onChange={(e) => setPointsCount(parseInt(e.target.value, 10))}/>\n        </div>\n\n\n      </div>\n        <h4 className='bckH4'>vyberte dieťa:</h4>\n        <div className='childpool'>\n            {\n                childrenList.map((children) => (\n                    <button key={children.id} className='selectBtn' onClick={() => selectBtnClick(children)}>{children.name} : {children.points}</button>\n                ))\n            }\n        </div>\n        <button \n            className='changePointsButton' \n            type='submit'\n            onClick={handleSubmit}\n        >\n            Zmeniť!\n        </button>\n        {error && <p className='error'>{error}</p>}\n    </>\n  );\n}\n\nexport default Background;"
    },
    {
        "prefix": "import { useEffect, useState, useRef } from 'react';\nimport './shop.css';\nimport { database } from '../config/firebaseConfig';\nimport",
        "middle": " { useNavigate } from 'react-r",
        "suffix": "outer-dom';\nimport { collection, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\n\nimport AddPlayer from '../components/addPlayer';\n\n//imgs\nimport loadedGif from '../imgs/loaded.gif';\nimport childrenBackground from '../imgs/childrenBackground.jpg';\n\n\nfunction Background() \n{\n  // Variables\n  localStorage.setItem('preventFromReturn', 'true');\n  const [childrenList, setChildrenList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [operation, setOperation] = useState('add');\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showGif, setShowGif] = useState(false);\n\n  const [selectedChild, setSelectedChild] = useState(null);\n  const [pointsCount, setPointsCount] = useState(0);\n\n  const navigate = useNavigate();\n  // Functions\n  \n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n\nuseEffect(() => {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => {\n      const childrenData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      const sortedData = childrenData.sort((a, b) => b.points - a.points);\n      setChildrenList(sortedData);\n    });\n\n    return () => unsubscribe(); // Cleanup listener on component unmount\n  }, []);\n\n  const selectBtnClick = (child) =>\n  {\n    setSelectedChild(child);\n  }\n\n  const handleSubmit = async () => {\n    if (selectedChild && selectedChild.id) {\n      try {\n        const childDocRef = doc(database, \"score\", selectedChild.id);\n        const currentPoints = selectedChild.points;\n\n        // Calculate new points based on operation\n        const newPoints = currentPoints - pointsCount;\n\n        if(newPoints < 0)\n        {\n          setError(\"Nedostatok bodov - nemožno dokončiť operáciu\")\n          return;\n        }\n\n        await updateDoc(childDocRef, {\n          points: newPoints\n        });\n\n\n        // alert('Points updated successfully!');\n        setShowGif(true);\n        setTimeout(() => {\n            setShowGif(false);\n        }, 1800);\n        setSelectedChild(null);\n        setError(\"\");\n        setPointsCount(0);\n\n\n        // Optional: Refresh the list\n        const updatedList = childrenList.map(child =>\n          child.id === selectedChild.id ? { ...child, points: newPoints } : child\n        );\n        setChildrenList(updatedList);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  \n\n  // Layout\n  return (\n    <>\n    {showGif && \n        <div id='gif'>\n            <img id='giff' src={loadedGif}/>\n        </div>\n    }\n\n    <button className='addPlayer' onClick={toggleModal}>+</button>\n\n    <AddPlayer \n        showModal={showModal} \n        toggleModal={toggleModal} \n    />\n      \n    \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='bckH1'>Obchod</h1>\n      </div>\n    \n      <div className='PointsContainer'>\n        \n\n        <h4 className='bckH4'>vyberte cenu v ochode:</h4>\n        <div className='pointcountsArea'>\n            <input type=\"range\" min=\"0\" max=\"80\" value={pointsCount} onChange={(e) => setPointsCount(parseInt(e.target.value, 10))}/>\n            <input type=\"number\" min=\"0\" max=\"80\" value={pointsCount} onChange={(e) => setPointsCount(parseInt(e.target.value, 10))}/>\n        </div>\n\n\n      </div>\n        <h4 className='bckH4'>vyberte dieťa:</h4>\n        <div className='childpool'>\n            {\n                childrenList.map((children) => (\n                    <button key={children.id} className='selectBtn' onClick={() => selectBtnClick(children)}>{children.name} : {children.points}</button>\n                ))\n            }\n        </div>\n        <button \n            className='changePointsButton' \n            type='submit'\n            onClick={handleSubmit}\n        >\n            Zmeniť!\n        </button>\n        {error && <p className='error'>{error}</p>}\n    </>\n  );\n}\n\nexport default Background;"
    },
    {
        "prefix": "import { useEffect, useState, useRef } from 'react';\nimport './shop.css';\nimport { database } from '../config/firebaseConfig';\nimport { useNavigate } from 'react-router-dom';\nimport { collection, getDocs, doc, updateDoc, onSnapshot } from 'firebase/firestore';\n\nimport AddPlayer from '../components/addPlayer';\n\n//imgs\nimport loadedGif from '../imgs/loaded.gif';\nimport childrenBackground from '../imgs/childrenBackground.jpg';\n\n\nfunction Background() \n{\n  // Variables\n  localStorage.setItem('preventFromReturn', 'true');\n  const [childrenList, setChildrenList] = useState([]);\n  const [error, setError] = useState(\"\");\n  const [operation, setOperation] = useState('add');\n\n  const [showModal, setShowModal] = useState(false);\n\n  const [showGif, setShowGif] = useState(false);\n\n  const [selectedChild, setSelectedChild] = useState(null);\n  const [pointsCount, setPointsCount] = useState(0);\n\n  const navigate = useNavigate();\n  // Functions\n  \n  useEffect(() => {\n    const autentif = localStorage.getItem('autentif');\n    if (autentif !== 'true') \n    {\n      navigate(\"/\");\n    }\n  }, [navigate]);\n\n\nuseEffect(() => {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => {\n      const childrenData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n      const sortedData = child",
        "middle": "renData.sort((a, b) =",
        "suffix": "> b.points - a.points);\n      setChildrenList(sortedData);\n    });\n\n    return () => unsubscribe(); // Cleanup listener on component unmount\n  }, []);\n\n  const selectBtnClick = (child) =>\n  {\n    setSelectedChild(child);\n  }\n\n  const handleSubmit = async () => {\n    if (selectedChild && selectedChild.id) {\n      try {\n        const childDocRef = doc(database, \"score\", selectedChild.id);\n        const currentPoints = selectedChild.points;\n\n        // Calculate new points based on operation\n        const newPoints = currentPoints - pointsCount;\n\n        if(newPoints < 0)\n        {\n          setError(\"Nedostatok bodov - nemožno dokončiť operáciu\")\n          return;\n        }\n\n        await updateDoc(childDocRef, {\n          points: newPoints\n        });\n\n\n        // alert('Points updated successfully!');\n        setShowGif(true);\n        setTimeout(() => {\n            setShowGif(false);\n        }, 1800);\n        setSelectedChild(null);\n        setError(\"\");\n        setPointsCount(0);\n\n\n        // Optional: Refresh the list\n        const updatedList = childrenList.map(child =>\n          child.id === selectedChild.id ? { ...child, points: newPoints } : child\n        );\n        setChildrenList(updatedList);\n      } catch (err) {\n        setError(\"Failed to update points.\");\n        console.error(err);\n      }\n    } else {\n      setError(\"Žiadne dieťa nebolo vybrané.\");\n    }\n\n  };\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n\n  \n\n  // Layout\n  return (\n    <>\n    {showGif && \n        <div id='gif'>\n            <img id='giff' src={loadedGif}/>\n        </div>\n    }\n\n    <button className='addPlayer' onClick={toggleModal}>+</button>\n\n    <AddPlayer \n        showModal={showModal} \n        toggleModal={toggleModal} \n    />\n      \n    \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='bckH1'>Obchod</h1>\n      </div>\n    \n      <div className='PointsContainer'>\n        \n\n        <h4 className='bckH4'>vyberte cenu v ochode:</h4>\n        <div className='pointcountsArea'>\n            <input type=\"range\" min=\"0\" max=\"80\" value={pointsCount} onChange={(e) => setPointsCount(parseInt(e.target.value, 10))}/>\n            <input type=\"number\" min=\"0\" max=\"80\" value={pointsCount} onChange={(e) => setPointsCount(parseInt(e.target.value, 10))}/>\n        </div>\n\n\n      </div>\n        <h4 className='bckH4'>vyberte dieťa:</h4>\n        <div className='childpool'>\n            {\n                childrenList.map((children) => (\n                    <button key={children.id} className='selectBtn' onClick={() => selectBtnClick(children)}>{children.name} : {children.points}</button>\n                ))\n            }\n        </div>\n        <button \n            className='changePointsButton' \n            type='submit'\n            onClick={handleSubmit}\n        >\n            Zmeniť!\n        </button>\n        {error && <p className='error'>{error}</p>}\n    </>\n  );\n}\n\nexport default Background;"
    },
    {
        "prefix": "import React, { useState } from 'react';\nimp",
        "middle": "ort './addPlayer.cs",
        "suffix": "s';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { database } from '../config/firebaseConfig'; // Assuming you have a firebaseConfig.js where you initialize Firebase\n\n\nfunction AddPlayer({ showModal, toggleModal }) \n{\n  const [newPlayerName, setNewPlayerName] = useState(\"\");\n\n  const handleAddPlayer = async () => \n  {\n    if (newPlayerName) \n    {\n      try \n      {\n        await addDoc(collection(database, 'score'), \n        {\n          name: newPlayerName,\n          points: 0,\n        });\n  \n        setNewPlayerName(\"\");\n        toggleModal();\n      } \n      catch (error) \n      {\n        console.error(\"Error adding player: \", error);\n      }\n    }\n  };\n  \n\n  if (!showModal) return null;\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <h2 className='addH2'>Pridať hráča:</h2>\n        <input\n          className='addInput'\n          type=\"text\"\n          value={newPlayerName}\n          onChange={(e) => setNewPlayerName(e.target.value)}\n          placeholder=\"Zadajte meno nového hráča\"\n        />\n        <br/>\n        <button className='addbtn' onClick={handleAddPlayer}>Pridať</button>\n        <br/>\n        <button className='addbtn2' onClick={toggleModal}>Zrušiť</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddPlayer;\n"
    },
    {
        "prefix": "import React, { useState } from 'react';\nimport './addPlayer.css';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { database } from '../config/firebaseConfig'; // Assuming you have a firebaseConfig.js where you initialize Firebase\n\n\nfunction AddPlayer({ showModal, toggleModal }) \n{\n  const [newPlayerName, setNewPlayerName] = useState(\"\");\n\n  const handleAddPlayer = async () => \n  {\n    if (newPlayerName) \n    {\n      try \n      {\n        await addDoc(collection(database, 'score'), \n        {\n          name: newPlayerName,\n          points: 0,\n        });\n  \n        setNewPlayerName(\"\");\n        toggleModal();\n      } \n      catch (error) \n      {\n        console.error(\"Error adding player: \", error);\n      }\n    }\n  };\n  \n\n  if (!showModal) return null;\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <h2 className='addH2'>Pridať hráča:</h2>\n        <input\n          className='addInput'\n          type=\"text\"\n          value={newPlayerName}\n          onChange={(e) => setNewPlayerName(e.target.value)}\n          placeholder=\"Zadajte meno nového hráča\"\n        />\n        <br/>\n        <button className='addbtn' onClick={handl",
        "middle": "eAddPlayer}>Prid",
        "suffix": "ať</button>\n        <br/>\n        <button className='addbtn2' onClick={toggleModal}>Zrušiť</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddPlayer;\n"
    },
    {
        "prefix": "import React, { useState } from 'react';\nimport './addPlayer.css';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { database } from '../config/firebaseConfig'; // Assuming you have a firebaseConfig.js where you initialize Firebase\n\n\nfunction AddPlayer({ showModal, toggleModal }) \n{\n  const [newPlayerName, setNewPlayerName] = useState(\"\");\n\n  const handleAddPlayer = async () => \n  {\n    if (newPlayerName) \n    {\n      try \n      {\n        await addDoc(collection(database, 'score'), \n        {\n          name: n",
        "middle": "ewPlayerName,\n          ",
        "suffix": "points: 0,\n        });\n  \n        setNewPlayerName(\"\");\n        toggleModal();\n      } \n      catch (error) \n      {\n        console.error(\"Error adding player: \", error);\n      }\n    }\n  };\n  \n\n  if (!showModal) return null;\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <h2 className='addH2'>Pridať hráča:</h2>\n        <input\n          className='addInput'\n          type=\"text\"\n          value={newPlayerName}\n          onChange={(e) => setNewPlayerName(e.target.value)}\n          placeholder=\"Zadajte meno nového hráča\"\n        />\n        <br/>\n        <button className='addbtn' onClick={handleAddPlayer}>Pridať</button>\n        <br/>\n        <button className='addbtn2' onClick={toggleModal}>Zrušiť</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddPlayer;\n"
    },
    {
        "prefix": "import React, { useState } from 'react';\nimport './addPlayer.css';\nimport { collection, addDoc } from 'firebase/firestore';\nimport { database } from '../config/firebaseConfig'; // Assuming you have a firebaseConfig.js where you initialize Firebase\n\n\nfunction AddPlayer({ showModal, toggleModal }) \n{\n  const [newPlayerName, setNewPlayerName] = useState(\"\");\n\n  const handleAddPlayer = async () => \n  {\n    if (newPlayerName) \n    {\n      try \n      {\n        await addDoc(collection(database, 'score'), \n        {\n          name: newPlayerName,\n          points: 0,\n        });\n  \n        setNewPlayerName(\"\");\n        toggleModal();\n      } \n      catch (error) \n      {\n        console.error(\"Error adding player: \", error);\n      }\n    }\n  };\n  \n\n  if (!showModal) return null;\n\n  return (\n    <div className=\"modal\">\n      <div className=\"modal-content\">\n        <h2 cla",
        "middle": "ssName='addH2'>Pridať",
        "suffix": " hráča:</h2>\n        <input\n          className='addInput'\n          type=\"text\"\n          value={newPlayerName}\n          onChange={(e) => setNewPlayerName(e.target.value)}\n          placeholder=\"Zadajte meno nového hráča\"\n        />\n        <br/>\n        <button className='addbtn' onClick={handleAddPlayer}>Pridať</button>\n        <br/>\n        <button className='addbtn2' onClick={toggleModal}>Zrušiť</button>\n      </div>\n    </div>\n  );\n}\n\nexport default AddPlayer;\n"
    },
    {
        "prefix": "import { useEffect, useState } from 'react';\nimport './App.css';\nimport { database } from './config/firebaseConfig';\nimport { collection, getDocs, onSnapshot} from 'firebase/firestore';\n\n//imgs\nimport childrenBackground from './imgs/childrenBackground.jpg';\n\n\nfunction App() \n{\n\n  //variables \n  const [childrenList, setChildrenList] = useState([]);\n\n  useEffect(() => \n  {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => \n    {\n      // Filter and sort data from snapshot\n      const filteredData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      const sortedData = filteredData.sort((a, b) => b.points - a.points);\n      setChildrenList(sortedData);\n    \n    }, \n    (err) => \n    {\n      console.error(\"Failed to fetch data: \", err);\n    });\n    localStorage.setItem('autentif', false);\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <>\n      \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='titleH1'>Bodka za prázdninami 2024</h1>\n      </div>\n\n      <div className='consoleTable'>\n        <table id='childrenTable'>\n          <thead>\n            <tr>\n              <th>Meno hráča</th>\n              <th>Počet bodov</th>\n            </tr>\n          </thead>\n          <tb",
        "middle": "ody>\n            {\n   ",
        "suffix": "           childrenList.map((children) => (\n                <tr key={children.id}>\n                  <td>{children.name}</td>\n                  <td>{children.points}</td>\n                </tr>                \n              ))\n            }\n          </tbody>\n        </table>\n        \n      </div>\n    </>\n  );\n}\n\nexport default App;\n"
    },
    {
        "prefix": "import { useEffect, useState } from 'react';\nimport './App.css';\nimport { database } from './config/firebaseConfig';\nimport { collection, getDocs, onSnapshot} from 'firebase/firestore';\n\n//imgs\nimport childrenBackground from './imgs/childrenBackground.jpg';\n\n\nfunction App() \n{\n\n  //variables \n  const [childrenList, setChildrenList] = useState([]);\n\n  useEffect(() => \n  {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => \n    {\n      // Filter and sort data from snapshot\n      const filteredData = snapshot.docs.map((doc) =>",
        "middle": " ({\n        ...doc.data",
        "suffix": "(),\n        id: doc.id,\n      }));\n\n      const sortedData = filteredData.sort((a, b) => b.points - a.points);\n      setChildrenList(sortedData);\n    \n    }, \n    (err) => \n    {\n      console.error(\"Failed to fetch data: \", err);\n    });\n    localStorage.setItem('autentif', false);\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <>\n      \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='titleH1'>Bodka za prázdninami 2024</h1>\n      </div>\n\n      <div className='consoleTable'>\n        <table id='childrenTable'>\n          <thead>\n            <tr>\n              <th>Meno hráča</th>\n              <th>Počet bodov</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              childrenList.map((children) => (\n                <tr key={children.id}>\n                  <td>{children.name}</td>\n                  <td>{children.points}</td>\n                </tr>                \n              ))\n            }\n          </tbody>\n        </table>\n        \n      </div>\n    </>\n  );\n}\n\nexport default App;\n"
    },
    {
        "prefix": "import { useEffect, useState } from 'react';\nimport './App.css';\nimport { database } from './config/firebaseCo",
        "middle": "nfig';\nimport { collection",
        "suffix": ", getDocs, onSnapshot} from 'firebase/firestore';\n\n//imgs\nimport childrenBackground from './imgs/childrenBackground.jpg';\n\n\nfunction App() \n{\n\n  //variables \n  const [childrenList, setChildrenList] = useState([]);\n\n  useEffect(() => \n  {\n    const unsubscribe = onSnapshot(collection(database, \"score\"), (snapshot) => \n    {\n      // Filter and sort data from snapshot\n      const filteredData = snapshot.docs.map((doc) => ({\n        ...doc.data(),\n        id: doc.id,\n      }));\n\n      const sortedData = filteredData.sort((a, b) => b.points - a.points);\n      setChildrenList(sortedData);\n    \n    }, \n    (err) => \n    {\n      console.error(\"Failed to fetch data: \", err);\n    });\n    localStorage.setItem('autentif', false);\n\n    // Cleanup subscription on unmount\n    return () => unsubscribe();\n  }, []);\n\n  return (\n    <>\n      \n      <div \n        className='title' \n        style={{\n          backgroundImage: `url(${childrenBackground})`,\n          backgroundPosition: 'center',\n          backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          color: 'white',\n          textAlign: 'center'\n        }}\n      >\n        <h1 className='titleH1'>Bodka za prázdninami 2024</h1>\n      </div>\n\n      <div className='consoleTable'>\n        <table id='childrenTable'>\n          <thead>\n            <tr>\n              <th>Meno hráča</th>\n              <th>Počet bodov</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              childrenList.map((children) => (\n                <tr key={children.id}>\n                  <td>{children.name}</td>\n                  <td>{children.points}</td>\n                </tr>                \n              ))\n            }\n          </tbody>\n        </table>\n        \n      </div>\n    </>\n  );\n}\n\nexport default App;\n"
    }
]